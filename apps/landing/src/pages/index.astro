---
import "../styles/base.css";
import { Icon } from "astro-icon/components";
import FullscreenLayout from "../components/layout/fullscreen-layout.astro";
import Button from "../components/button.astro";
import StarMenu from "../components/star-menu.astro";
import RootLayout from "../layouts/root-layout.astro";
interface Social {
    link: string;
    title: string;
    icon: string;
}

const social: Social[] = [
    {
        link: "mailto:nicolas@matizlab.com",
        title: "Get in touch",
        icon: "mdi:envelope",
    },
    {
        link: "https://www.linkedin.com/in/nicolasramirezdev",
        title: "Link to LinkedIn Profile",
        icon: "mdi:linkedin",
    },
    {
        link: "http://www.instagram.com/nicoramirezdev",
        title: "Link to Instagram Profile",
        icon: "mdi:instagram",
    },
    {
        link: "https://www.github.com/kamatheuska",
        title: "Link to Github Profile",
        icon: "mdi:github",
    },
    {
        link: "https://stackoverflow.com/u/7868769",
        title: "Link to Stackoverflow Profile",
        icon: "mdi:stack-overflow",
    },
];

// For client-side interactivity
---

<RootLayout>
    <main class="text-right" x-data="stars">
        <div>
            <div class="relative" id="starMenuContainer" :style="starMenuStyle">
                <header
                    class="flex flex-col mb-12 font-black text-neutral-200 absolute z-50"
                    x-show="isMenuOpen"
                    x-transition.opacity
                    x-transition:enter.duration.400ms
                    x-transition:leave.duration.400ms
                    x-transition.delay.400ms
                >
                    <!-- <div class="text-3xl cursor-pointer" data-menu-toggle> -->
                    <!--     <Icon name="uil:bars" @click="toggle()" /> -->
                    <!-- </div> -->
                    <div class="text-3xl cursor-pointer" data-menu-toggle>
                        <Button
                            @click="updateBackgroundStyles($data)"
                            class="border-none p-0 hover:bg-none"
                            variant="ghost"
                        >
                            <span class="flex justify-center items-center gap-2 px-4 py-2">
                                <Icon name="uil:arrow-left" />
                                <span>Back</span>
                            </span>
                        </Button>
                    </div>
                </header>
                <StarMenu />
            </div>
            <div class="relative" :style="contentStyle">
                <div class="backdrop-blur-sm w-full transition-all duration-500 ease-out" data-backdrop>
                    <div
                        class="min-h-screen flex justify-center items-end p-4 flex-col relative md:max-w-[50%]"
                    >
                        <div
                            x-show="!isMenuOpen"
                            x-transition.opacity
                            x-transition:enter.duration.400ms
                            x-transition:leave.duration.400ms
                            class="flex flex-col justify-end items-end"
                        >
                            <h3 class="text-light-green text-lg font-mono m-0">Hi! My name is</h3>
                            <h1 class="text-pink-400 font-bold font-serif text-[12vw] md:text-[6vw] m-0">
                                Nicolas Ramirez
                            </h1>
                            <p class="text-light-blue max-w-[350px] md:text-lg mb-5">
                                I am Software Developer specialized on creating great products for the web
                            </p>
                            <ul class="mt-0 text-2xl flex mb-5">
                                {
                                    social.map((item, index) => (
                                        <li class={index !== social.length - 1 ? "mr-4" : ""}>
                                            <a
                                                href={item.link}
                                                target="_blank"
                                                aria-label={item.title}
                                                class="text-pink-500 hover:text-green-400 transition-colors"
                                            >
                                                <Icon name={item.icon} class="w-8 h-8" />
                                            </a>
                                        </li>
                                    ))
                                }
                            </ul>
                            <div class="transition-opacity duration-300">
                                <Button @click="updateBackgroundStyles($data)"> Start </Button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="relative" :style="backgroundStyle">
                <div class="backdrop-blur-sm w-full transition-all duration-500 ease-out" data-backdrop>
                    <div
                        class="min-h-screen flex justify-center items-end p-4 flex-col relative md:max-w-[50%]"
                    >
                        <div
                            x-show="!isMenuOpen"
                            x-transition.opacity
                            x-transition:enter.duration.400ms
                            x-transition:leave.duration.400ms
                            class="flex flex-col justify-end items-end"
                        >
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <script>
            const starMenuContainer = document.getElementById("starMenuContainer");
            console.log("star", starMenuContainer);
            if (!starMenuContainer) {
                throw new Error("No starMenu container");
            }

            document.addEventListener("alpine:init", () => {
                // @ts-ignore
                Alpine.data("stars", () => ({
                    isMenuOpen: false,
                    backgroundStyle: "z-index: 10",
                    starMenuStyle: "z-index: 20",
                    contentStyle: "z-index: 30",
                    updateBackgroundStyles({ isMenuOpen }: { isMenuOpen: boolean }) {
                        console.log("current state", isMenuOpen);
                        this.isMenuOpen = !this.isMenuOpen;
                        if (this.isMenuOpen) {
                            this.backgroundStyle = "z-index: 10";
                            this.starMenuStyle = "z-index: 30";
                            this.contentStyle = "z-index: 20";
                        } else {
                            this.backgroundStyle = "z-index: 10";
                            this.starMenuStyle = "z-index: 20";
                            this.contentStyle = "z-index: 30";
                        }
                    },
                }));
            });
            starMenuContainer.style.color = "red";
        </script>
    </main>
</RootLayout>

<script>
    let showBackdrop = true;

    // Show start button after delay
    setTimeout(() => {
        document.getElementById("startButton")?.classList.remove("hidden");
    }, 600);

    // Toggle backdrop
    document.getElementById("startButton")?.addEventListener("click", () => {
        showBackdrop = !showBackdrop;
        // You'll need to implement the backdrop toggle logic here
    });
</script>

<style>
    /* Add any custom styles that can't be handled by Tailwind here */
    .fullscreen-layout {
        /* Add your fullscreen layout styles */
    }
</style>
